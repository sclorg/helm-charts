apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Defines how to deploy the database
    image.openshift.io/triggers: |-
      [
        {
          "from": {
            "kind": "ImageStreamTag",
            "name": "mysql:{{ .Values.mysql_version }}"
          },
          "fieldPath": "spec.template.spec.containers[0].image"
        }
      ]
    template.alpha.openshift.io/wait-for-ready: "true"
  labels:
    app: cakephp-mysql
    template: cakephp-mysql
  name: {{ .Values.database_service_name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ .Values.database_service_name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: {{ .Values.database_service_name }}
      name: {{ .Values.database_service_name }}
    spec:
      containers:
      - env:
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: {{ .Values.name }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: {{ .Values.name }}
        - name: MYSQL_DATABASE
          value: "{{ .Values.database_name }}"
        - name: MYSQL_DEFAULT_AUTHENTICATION_PLUGIN
          value: "{{ .Values.mysql_default_authentication_plugin }}"
        image: " "
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: 3306
          timeoutSeconds: 1
        name: mysql
        ports:
        - containerPort: 3306
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - MYSQL_PWD='{{ .Values.database_password }}' mysql -h 127.0.0.1 -u {{ .Values.database_user }}
              -D {{ .Values.database_name }} -e 'SELECT 1'
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            memory: {{ .Values.memory_mysql_limit }}
        volumeMounts:
        - mountPath: /var/lib/mysql/data
          name: {{ .Values.database_service_name }}-data
      volumes:
      - name: {{ .Values.database_service_name }}-data
        persistentVolumeClaim:
          claimName: {{ .Values.database_service_name }}
